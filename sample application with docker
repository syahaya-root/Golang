#Code

Create file a name is "main.go", thats file for code application golang. Example template:
====================================================
package main

import (
    "fmt"
    "html"
    "log"
    "net/http"
)

func main() {

    http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
        fmt.Fprintf(w, "Hello, %q", html.EscapeString(r.URL.Path))
    })

    http.HandleFunc("/hi", func(w http.ResponseWriter, r *http.Request){
        fmt.Fprintf(w, "Hi")
    })

    log.Fatal(http.ListenAndServe(":8081", nil))

}
====================================================

If you already have service "Go", you can test with command "go run main.go" and access URL "http://localhost:8081".

#Dockerfile

You can create file "Dockerfile" for application Golang will live. Example template:
====================================================
FROM golang:1.12.0-alpine3.9
RUN mkdir /app
ADD . /app
WORKDIR /app
RUN go build -o main .
CMD ["/app/main"]
====================================================

And build the image with command "docker build -t my-go-app ." After that run the image with command "docker run -p 8080:8081 -it my-go-app".

Check the container if run or not with command "docker ps". If container is running you can access URL "http://localhost:8080".

If success your browser display is "Hello, "/"".
